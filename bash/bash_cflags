#!/bin/sh
#
# Jeffrey Carpenter <jeffrey.carp@gmail.com>
#
#   Local development config for hobbyist software development & general system
# administration
#

export LOCAL="virgo" # Reserved bash var for future use...

# convenience bash shell vars for common user paths
export DESKTOP="$HOME/Desktop"
export DOCUMENTS="$HOME/Documents"
export DOWNLOADS="$HOME/Downloads"
export MOVIES="$HOME/Movies"
export MUSIC="$HOME/Music"
export PICTURES="$HOME/Pictures"
export PROJECTS="$HOME/Projects"
export TMP="$HOME/tmp"
export TORRENTS="$HOME/Downloads/torrents"

export NOM="$PROJECTS/nomlib.git"
export TT="$PROJECTS/ttcards.git"
export CFG="$PROJECTS/dotfiles"
export HCFG="$PROJECTS/homebrew"
NOMDEV="${PROJECTS}/nomdev.git"

case "$(uname -s)" in
  Darwin)
    # CC & CXX should not need to be set
    #export CC="/usr/bin/clang"
    # export CXX="/usr/bin/clang++"

    export MAKEFLAGS="-j5" # MacBook Air Mid 2011 [Intel Core i5 1.6Ghz]

    # It is a personal preference to use /usr/bin/xcode-select to set the
    # default DEVELOPER_DIR path, instead of setting it from the shell
    # environment; i.e.: eases the use of concurrent build environments.
    #
    # See also: man 1 xcode-select
    #export DEVELOPER_DIR="/Applications/Xcode.app/Contents/Developer"

    #export CCACHE_PATH="/usr/local/opt/ccache/libexec"
    #CCACHE_DIR="/ramdisk/dir"; export CCACHE_DIR

    # Note that $CCACHE_PATH be included early on, so that it does not get
    # overridden by the standard search paths, i.e.: /usr/local/bin, /usr/bin,
    # etc.
    #export PATH="$CCACHE_PATH:$PATH"

    # node.js
    export NODE_PATH="/usr/local/lib/node_modules"

    # emscripten
    #EMMAKEN_COMPILER="/usr/local/bin/clang++"; export EMMAKEN_COMPILER

    # Source: http://crossgcc.rts-software.org/doku.php?id=start
    export PATH="$PATH:/usr/local/gcc-4.8.0-qt-4.8.4-for-mingw32/win32-gcc/bin"
    export PATH="$NOMDEV:$PATH"

    alias nomdev='nomdev.rb $@'

    # Show GTest diagnostics output
    export CTEST_OUTPUT_ON_FAILURE=true

    export PKG_CONFIG_PATH="${PKG_CONFIG_PATH}:/opt/X11/lib/pkgconfig"
  ;;
  # Horribly outdated configuration from several years ago... sniff, sniff!
  #
  # See also,
  #
  # makepkg.conf(5)   makepkg(8)    pacman(8)   PKGBUILD(5)
  Linux) # ArchLinux-tailored (increasingly evolving towards a more generic *nix setup...)
    export MAKEFLAGS="-j4"

    #FIXME/TODO: eval /etc/makepkg.conf
    #export CARCH=""
    #export CHOST=""
    #export LDFLAGS="-W1,-O1,--sort-common,--as-needed,-z,relro,--hash-style=gnu"

    #export CFLAGS="-march=i686 -mtune=generic -O2 -pipe -fstack-protector -D_FORTIFY_SOURCE=2"
    #export CXXFLAGS=$CFLAGS
  ;;
  *)
  ;;
esac

#if [ "$(which pkg-config)" ]; then
  #SDL_DEV="$(pkg-config --cflags --libs sdl SDL_image SDL_mixer SDL_ttf)"; export SDL_DEV
#fi

# Apparently, PREFIX bash var conflicts with NPM (node's package manager), so
# the quick solution was to not use this bash var anymore.
#export PREFIX="~/local"

if [ -f "$(which rbenv)" ]; then
  eval "$(rbenv init -)"
  PATH="$HOME/.rbenv/versions/1.9.3-p0/bin:$PATH"; export PATH
fi

#export GEM_HOME="$HOME/.gem/ruby/1.9.3-p0"
#export GEM_PATH="$HOME/.gem/ruby/1.9.3-p0"
#export GEM_PATH="/usr/lib/ruby/gems/1.9.3"
#export RUBYOPT="-W2 -v"
#RUBYLIB="/Library/Ruby"; export RUBYLIB
#export RUBYLIB="/home/jeff/Projects/ruby/lib"

export NOM_COLOR=always
